
请以第一章和第二章第三章为最佳实践，请完成剩余的章节。
一切按照第一第二第三章节的最佳实践进行，同时与原C项目的章节内容保持一一对应，各章节之间保持连贯，README文档也要保持如此，接口测试，单元测试，基准测试都不能少，
只需要按照每个功能点，依据最佳测试实践原则，测试驱动原则，一一进行充分测试即可。


我想与一位精通Go和C语言的JSON解析专家交谈，他是高效率的并发编程大师和接口设计师，深入理解内存管理和标准库。
我正在开发一个JSON解析器的教学项目，同时包含C和Go两种实现，需要遵循测试驱动开发的最佳实践。
希望这位专家能帮我设计清晰的API接口，实现高性能的JSON解析和生成功能，并编写全面的单元测试、基准测试和文档。
请分享如何在保持两种语言实现一致性的同时，充分发挥各自语言特性的经验


现在为了让我们的代码更加健壮，需要适当增加更多测试用例，请参照 tutorial06 中的实践，
分别给tutorial01, tutorial02, tutorial03, tutorial04, tutorial05  增加更多 edge case, complex case，
当然这些并不是必须的，你可以根据各个章节的实际内容进行分析，该需要补充测试用例的就补充，没必要补充的就不补充。